<% content_for :head do %>
  <%= stylesheet_link_tag "widgets/#{params[:id]}" %>
  
  <script type="text/javascript">
    // config variables
    var data_endpoint = "<%= settings[:data_endpoint] %>";
    var sunlight_api_key = "<%= settings[:sunlight_api_key] %>";
    var snapshot_directory = "<%= settings[:snapshot_directory] %>";
    
    var bioguide_id = "<%= params[:bioguide_id] %>".toUpperCase();
    var size = "<%= @size %>";
    var snapshot_id = "<%= params[:snapshot_id] %>";
    
    
    // geolocation
    var geolocate = false;
    var latitude, longitude, located_legislator;
    <% if params[:geolocate] == "true" %>
      geolocate = true;
      
      <% if @location %>
        latitude = "<%= @location[:latitude] %>";
        longitude = "<%= @location[:longitude] %>";
      <% end %>
    <% end %>
    
    // will hinge on geolocation
    var switcher = false;
    
    //hack
    var switcher_up = true;
    
    
    // api keys
    Sunlight.api_key = sunlight_api_key;
    Drumbone.base_url = data_endpoint;
    Drumbone.api_key = sunlight_api_key;
    TransparencyData.api_key = sunlight_api_key;
    
    
    var Widget = {
      load: function(bioguide_id) {}, // overwritten by each child widget before document is done loading
      
      onLoad: function(legislator) {
        var show = function() {
          prepareSource();
          $("body").show();
        }
        if (switcher)
          prepareSwitcher(legislator, show);
        else
          show();
      },
      
      alert: function(message, legislator) {
        $("#mainContent").hide();
        $("#widgetAlert p").html(message);
        $("#widgetAlert").show();
        
        if (switcher) {
          //TODO populate the basic leg info alone
          Widget.populateLegislator(legislator);
          prepareSwitcher(legislator);
        }
        
        $("body").show();
      },
      
      error: function(message) {
        $("#headerWrapper").hide();
        $("#changeLawmaker").hide();
        $("#widgetAlert").addClass("error");
        
        $("#mainContent").hide();
        $("#widgetAlert p").html(message);
        $("#widgetAlert").show();
        
        $("body").show();
      },
      
      unalert: function() {
        $("#headerWrapper").show();
        $("#mainContent").show();
        $("#widgetAlert p").html("");
        $("#widgetAlert").hide();
      },
      
      source: function(date, text) {
        $("#last_updated").html(formatSourceDate(new Date(date)));
        $("#sourceContent").html(text);
      },
      
      populateLegislator: function(legislator) {
        var legislator_district = "";
        if (legislator.district == '0')
          legislator_district = "AL";
        else
          legislator_district = legislator.district;

        var legislator_state = "";
        if (legislator.title == "Sen")
          legislator_state = legislator.state;
        else
          legislator_state = legislator.state + "-" + legislator_district;
          
        $("#headerWrapper").autoRender({
          title: (size == 'sm' ? shortTitle(legislator) : longTitle(legislator)),
          full_name: fullName(legislator),
          pic: profileImage(legislator.bioguide_id),
          pic_alt: "Picture of " + fullName(legislator),
          state_downcase: legislator.state.toLowerCase(),
          state: legislator_state,
          party: "(" + legislator.party + ")"
        });
        
        $("img.pic.pic_alt").attr("class", "pic@src pic_alt@alt");
      }
    };
    
    $(function() {
      if (geolocate) {
        switcher = true;
        if (latitude && longitude) {
          Sunlight.allForLatLong(latitude, longitude, function(legislators) {
            if (legislators != null && legislators.length) {
              located_legislator = pullOutRep(legislators);
              Widget.load(located_legislator.bioguide_id, Widget.onLoad);
            }
            else // geolocated the user, but found no legislator for that lat/long (user may be non-US)
              Widget.load(bioguide_id, Widget.onLoad);
          });
          
        } else // geolocation is enabled for the widget, but we couldn't figure out where the user is
          Widget.load(bioguide_id, Widget.onLoad);
        
      } else // geolocation is disabled for the widget
        Widget.load(bioguide_id, Widget.onLoad);
    });
    
    // pull out the first legislator whose title is not 'Sen', 
    // and if there is none (i.e. open seat) then just return the first one
    function pullOutRep(legislators) {
      var index = -1;
      $.each(legislators, function(i, legislator_object) {
        var legislator = legislator_object.legislator;
        if (legislator.title != 'Sen') {
          index = i;
          return false; // jQuery's way of doing a "break"
        }
      });
      return legislators[index > -1 ? index : 0].legislator;
    }
    
    function prepareSource() {
      $("div#sources a.sourceText").toggle(
        function(){
          $(this).addClass("active");
          $("div#sourceArea").slideDown("slow");
          return false;
        },
        function() {
          $(this).removeClass("active");
          $("div#sourceArea").slideUp("slow");
          return false;
        } 
      );
    }
    
    // needs to be idempotent - may be called repeatedly as users switch states/legislators
    function prepareSwitcher(legislator, showCallback) {
      $("div#changeLawmaker a#closeBtn").click(function() {
        $("div#changeLawmaker").hide();
        return false;
      });
      
      $("div#changeLawmaker span.current_name").html(fullName(legislator));
      
      $("div#changeLawmaker select.state")
        .unbind('change')
        .val(legislator.state)
        .change(switchState);
      
      
      if (switcher_up) {
        $("div#changeLawmaker").show();
      } else
        switcher_up = true; // reset for next time
      
      $("a.changeState").click(function() {
        $("div#changeLawmaker").toggle();
        return false;
      }).show();
      
      Sunlight.allForState(legislator.state, function(legislators) {
        if (legislators == null)
          Widget.error("There was a problem loading legislators from " + state + ".");
        else {
          $("span.full_name").hide();
          $("small.title").hide();
          $("select.changeLawmakerSelect")
            .unbind("change")
            .html(optionsForSwitcher(sortForSwitcher(legislators)))
            .val(legislator.bioguide_id)
            .change(switchLegislator)
            .show();
          
          if (showCallback)
            showCallback();
        }
      });
    }
    
    function switchLegislator() {
      Widget.unalert();
      switcher_up = false; // if it ends up an alert, keep the switcher down
      
      Widget.load($(this).val(), onSwitchLegislator);
    }
    
    function onSwitchLegislator(legislator) {
      $("div#changeLawmaker span.current_name").html(fullName(legislator));
      $("div#changeLawmaker").hide();
      $("a.changeState").click(function() {
        $("div#changeLawmaker").toggle();
        return false;
      })
      $("select.changeLawmakerSelect")
        .val(legislator.bioguide_id)
        .change(switchLegislator);
    }
    
    function switchState() {
      Widget.unalert();
      switcher_up = true; // if it ends up an alert, keep the switcher up
      
      var state = $(this).val();
      Sunlight.allForState(state, function(legislators) {
        var sorted = sortForSwitcher(legislators);
        if (legislators == null)
          Widget.error("There was a problem loading legislators from " + state + ".");
        else
          Widget.load(sorted[0].legislator.bioguide_id, onSwitchState);
      });
    }
    
    function onSwitchState(legislator) {
      prepareSwitcher(legislator);
    }
    
    function optionsForSwitcher(legislators) {
      var options = "";
      $.each(legislators, function(index, l) {
        var legislator = l.legislator;
        options += "<option value=\"" + legislator.bioguide_id + "\">" + titledName(legislator, true) + "</option>";
      });
      return options;
    }
    
    function sortForSwitcher(legislators) {
      var senators = [];
      var reps = [];
      $.each(legislators, function(index, legislator) {
        if (legislator.legislator.title == 'Sen')
          senators[senators.length] = legislator;
        else
          reps[reps.length] = legislator;
      });
      return senators.concat(reps);
    }
    
  </script>
<% end %>

<% content_for :body_class, "#{params[:id]}_#{params[:size]} #{params[:size]}" %>

<%= render "widgets/embed/#{params[:id]}" %>