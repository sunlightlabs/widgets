<% content_for :head do %>
  <script type="text/javascript">
    var cycle = TransparencyData.currentCycle;

    Widget.load = function(id, onLoad) {

      var legislatorCallback = function(legislator){

        if (legislator == null)
          Widget.error("There was a problem loading this lawmaker's information.");
        else {

          TransparencyData.getEntityId(legislator, function(entity_id) {
            if (entity_id == null)
              Widget.alert("We do not yet have any information on this lawmaker's campaign contributions.", legislator, "40x50");
            else {

              TransparencyData.topContributors(entity_id, cycle, function(top_contributors) {
                if (top_contributors == null)
                  Widget.alert("There was a problem loading contributions for this lawmaker.", legislator, "40x50");
                else if (top_contributors.length == 0)
                  Widget.alert("We don't have any contribution information for this lawmaker for the " + cycle + " cycle.", legislator, "40x50");
                else {
                  populateWidget(legislator, top_contributors);
                  onLoad(legislator);
                }
              });
            }
          });
        };
      };

      Politiwidgets.People.get(id, "basic", legislatorCallback);
    };

  </script>
<% end %>

<div id="headerWrapper" style="background-color: #<%= params[:color] || "EBE9D4" %>">
  <div id="header">
    <div id="rep">
      <% if params[:size] != 'sm' %>
        <img src="" class="pic@src pic_alt@alt" width="40" />
      <% end %>
      <div id="repInfo">
        <h1>
          <small class="title"></small>
          <big>
            <span class="full_name"></span>
            <select class="changeLawmakerSelect" style="display: none;"></select>
          </big>
        </h1>
        <div id="lawmakerMetadata">
          <span class="party"></span>
          <span class="state"></span>
          <a class="changeState" title="Change State" href="#" style="display: none;">Change State</a>
        </div>
        <div class="clear"></div>
      </div>
    </div>
  </div> <!-- end header -->
</div>
<div id="mainContent">
  <h2>Top 5 Contributors</h2>
  <div id="chart-container-1"></div>
  <% if params[:size] == 'sm' %>
    <ol id="key">
      <li class="contributors name"></li>
    </ol>
  <% end %>
</div>


<script type="text/javascript">

  function populateWidget(legislator, top_contributors) {
    Widget.populateLegislator(legislator, "40x50");

    var crp_url = "http://www.opensecrets.org/politicians/summary.php?cid=" + legislator.crp_id;
    var description = "Data provided by <a href=\"http://transparencydata.com\" target=\"_blank\">TransparencyData</a>, calculated from numbers provided by the <a href=\"" + crp_url + "\" target=\"_blank\">Center for Responsive Politics</a>, for the " + cycle + " election cycle.";
    Widget.source("2010-07-03", description);

    var top_names = [];
    var top_amounts = [];
    var name_objects = [];

    for (var i = 0; i < Math.min(5, top_contributors.length); i++) {
      top_names[i] = top_contributors[i].name;
      name_objects[i] = {name: top_contributors[i].name.substring(0,15)};
      top_amounts[i] = parseFloat(top_contributors[i].total_amount);
    }

    var names = top_names;
    if (size == 'sm') {
      names = ['1', '2', '3', '4', '5'];
      $("ol#key")
        .html("<li class=\"contributors name\"></li>") // not idempotent
        .autoRender({"contributors": name_objects});
    }

    var dimensions = {};
    if (size == 'lg') {
      dimensions.width = 350;
      dimensions.height = 155;
      dimensions.maxPadding = 0.3;
      dimensions.margin = [10, 15, 0, 120];
    } else if (size == 'med') {
      dimensions.width = 260;
      dimensions.height = 115;
      dimensions.maxPadding = 0.3;
      dimensions.margin = [10, 10, 10, 120];
    } else {
      dimensions.width = 110;
      dimensions.height = 95;
      dimensions.margin = [10, 5, 15, 15];
      dimensions.maxPadding = 0.7;
    }

    $(function() {
      var chart1 = new Highcharts.Chart({
        chart: {
          renderTo: 'chart-container-1',
          defaultSeriesType: 'bar',
          width: dimensions.width,
          height: dimensions.height,
          margin: dimensions.margin
        },

        title: {
          text: " ",
          style: {
            display: 'none',
            position: 'absolute',
            left: '0',
            top: '0'
          }
        },

        xAxis: {
          categories: names,
          labels: {
            formatter: function() {
              return this.value.substring(0,17);
            }
          }
        },

        yAxis: {
          title: null,
          maxPadding: dimensions.maxPadding,
          gridLineWidth: 0,
          labels: {
            enabled: false
          }
        },
        colors: ['#96BD6A'],
        credits: { enabled: false },
        plotOptions: {
          bar: {
            dataLabels: {
              enabled: true,
              color: 'auto',
              y: 0,
              formatter: function() {
                return '$' + Highcharts.numberFormat(this.y, 0);
              }
            }
          }
        },
        tooltip: {
          formatter: function() {
            return '<b>' + this.x +'</b><br/>$' + Highcharts.numberFormat(this.y, 0) + '';
          }
        },
        legend: { enabled: false },
        series: [{
          name: '',
          data: top_amounts
        }]
      });
    });
  }

</script>