<% content_for :head do %>
  <script type="text/javascript">
    // does not support geolocation as of yet

    Widget.load = function(id) {
      var id = id;
      Politiwidgets.People.get(id, "basic", function(legislator) {
        if (legislator && legislator.bioguide_id == id) {

          <%
            roll_id = nil
            if params[:roll_id]
              roll_id = params[:roll_id]
            elsif params[:title] == 'Sen'
              roll_id = @widget[:custom][:roll_id][:senate]
            else
              roll_id = @widget[:custom][:roll_id][:house]
            end
          %>
          var roll_id = "<%= roll_id %>";

          RTC.Votes.get(roll_id, {chamber: legislator.chamber}, function(roll){

            if (roll) {
              if (roll.voter_ids && roll.voter_ids[id]) {
                var vote = roll.voter_ids[id];
                populateWidget(vote, roll, roll.bill, legislator);
                Widget.onLoad();
              } else {
                window.voter_ids = roll.voter_ids;
                Widget.alert("This representative has no recorded vote for this bill.");
              }

            } else
              Widget.error("There was a problem loading this lawmaker's information.");
          });
        }

        else
          Widget.error("There was a problem loading this lawmaker's information.");
      });
    };
  </script>

<% end %>

<div id="headerWrapper" style="background-color: #<%= params[:color] || "DDD9D7" %>">
  <div id="header">
    <h1 class="right">
      <big class="bill_code"></big>
      <% unless params[:size] == 'sm' %>
        <small class="short_title"></small>
      <% end %>
    </h1>
    <!--<div id="billResult" class="left">
      <span class="result_upper result_lower@class"></span>
    </div> -->
    <div class="clear"></div>
  </div>
</div>
<div id="mainContent">
  <div id="rep" class="right">
    <% unless params[:size] == 'sm' %>
      <img alt="Picture of " src="" class="pic@src full_name@alt+" width="40px" />
    <% end %>
    <div id="repInfo">
      <h1>
        <small class="title"></small>
        <big class="full_name"></big>
      </h1>
      <div id="lawmakerMetadata" class="state_downcase@class">
        <span class="party"></span>
        <span class="state"></span>
      </div>
      <div class="clear"></div>
    </div>
  </div>
  <div id="lawmakerVote" class="left">
    <span class="legislator_vote_value legislator_vote_class@class"></span>
  </div>
  <div class="clear"></div>
  <div id="voteTotals">
    <h2>Vote Totals</h2>
    <div id="voteKey">
      <dl>
        <dt id="republican">Republican</dt>
        <dd>Rep</dd>
        <dt id="democrat">Democrat</dt>
        <dd>Dem</dd>
        <dt id="independent">Independent</dt>
        <dd>Ind</dd>
      </dl>
    </div>

    <div id="chart-container-1" class="right"></div>
  </div>
</div>

<script type="text/javascript" charset="utf-8">
  function populateWidget(vote, roll, bill, legislator) {
    var description = "Data provided by <a href=\"" + govtrackBillUrl(bill.type, bill.number, bill.session) + "\" target=\"_blank\">GovTrack.us</a> through the <a href=\"http://thomas.loc.gov\" target=\"_blank\">Library of Congress</a>.<br/>Bill code and vote data applies to legislative activity in the " + currentSession() + "th Congress.";

    Widget.source(bill.last_action_at, description);

    var legislator_district = "";
    if (legislator.district == '0')
      legislator_district = "AL";
    else
      legislator_district = legislator.district;

    var legislator_state = "";
    if (legislator.title == "Sen")
      legislator_state = legislator.state;
    else
      legislator_state = legislator.state + "-" + legislator_district;

    var party_long = "";
    if (legislator.party == 'D')
      party_long = "democrat";
    else if (legislator.party == 'R')
      party_long = "republican";
    else
      party_long = "independent";

    var legislator_data = {
      title: (size == 'lg' ? longTitle(legislator) : shortTitle(legislator)),
      full_name: fullName(legislator),
      pic: profileImage(legislator),
      state_downcase: legislator.state.toLowerCase(),
      state: legislator_state,
      party: "(" + legislator.party + ")",
      party_long: party_long
    };

    $('div#rep').autoRender(legislator_data);

    var bill_data = {
      short_title: bill.short_title,
      bill_code: bill.bill_type.toUpperCase() + " " + bill.number
    };
    $('div#header').autoRender(bill_data);


    var roll_data = {
        ayes: roll.vote_breakdown.total.Yea,
        nays: roll.vote_breakdown.total.Nay,
        present: roll.vote_breakdown.Present,
        not_voting: roll.vote_breakdown['Not Voting'],
        dem_ayes: roll.vote_breakdown.party.D.Yea,
        dem_nays: roll.vote_breakdown.party.D.Nay,
        dem_present: roll.vote_breakdown.party.D.Present,
        dem_not_voting: roll.vote_breakdown.party.D['Not Voting'],
        rep_ayes: roll.vote_breakdown.party.R.Yea,
        rep_nays: roll.vote_breakdown.party.R.Nay,
        rep_present: roll.vote_breakdown.party.R.Present,
        rep_not_voting: roll.vote_breakdown.party.R['Not Voting']
      };
    $('div#voteTotals').autoRender(roll_data);

    var vote_map = {
      'Yea': {legislator_vote_value: "Aye", legislator_vote_class: "aye"},
      'Nay': {legislator_vote_value: "Nay", legislator_vote_class: "nay"},
      'Present': {legislator_vote_value: "Present", legislator_vote_class: "present"},
      'Not Voting': {legislator_vote_value: "Absent", legislator_vote_class: "notvoting"}
    }

    $('div#lawmakerVote').autoRender(vote_map[vote]);


    var dimensions = {};
    if (size == 'sm') {
      dimensions.width = 150;
      dimensions.height = 70;
      dimensions.margin = [10, 0, 23, 30];
    } else if (size == 'med') {
      dimensions.width = 280;
      dimensions.height = 55;
      dimensions.margin = [5, 20, 20, 30];
    } else {
      dimensions.width = 350;
      dimensions.height = 75;
      dimensions.margin = [5, 20, 20, 30];
    }

    var series = [];
    series[0] = {
                  name: 'Democrat',
                  data: [roll.vote_breakdown.party.D.Yea, roll.vote_breakdown.party.D.Nay]
                };
    series[1] = {
                  name: 'Republican',
                  data: [roll.vote_breakdown.party.R.Yea, roll.vote_breakdown.party.R.Nay]
                  };
    if (roll.vote_breakdown.party.I != null) {
      series[2] = {
                    name: 'Independent',
                    data: [roll.vote_breakdown.party.I.Yea, roll.vote_breakdown.party.I.Nay]
                  };
    }

    var chart1 = new Highcharts.Chart({
      chart: {
        renderTo: 'chart-container-1',
        defaultSeriesType: 'bar',
        width: dimensions.width,
        height: dimensions.height,
        margin: dimensions.margin
      },
      colors: [
      '#0096C9',
      '#E31E26',
      '#BCBEC0'
      ],
      title: {
        text: " ",
        style: {
          display: 'none',
          position: 'absolute',
          left: '0',
          top: '0'
        }
      },
      xAxis: {
        categories: ['Aye', 'Nay']
      },
      yAxis: {
        title: null
      },
      credits: { enabled: false },
      legend: { enabled: false },

      plotOptions: {
        bar: {
          borderWidth: 0.5,
          stacking: 'normal',
          groupPadding: -.02, // sm size
          pointPadding: .2
        }
      },
      tooltip: {
        formatter: function() {
          return '<b>'+ this.y +'</b>' + ' ' + this.x + ' Votes' + '<br/>'+
          'by ' + this.series.name + 's';
        }
      },
      series: series
    });

  }

</script>