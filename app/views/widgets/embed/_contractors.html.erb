<div id="headerWrapper" style="background-color: #<%= params[:color] || "DDD9D7" %>">
  <div id="header">
    <h1>
      <big>Top 5 Contractors</big><small>in <span class="state"></span><span id="year"> for FY2009</span></small>
    </h1>
    <div id="districtMap">
      <% if params[:size] != 'sm' -%>
      <img alt="district map" class="pic@src"/>
      <% end -%>
    </div>    
    <div class="clear"></div> 
  </div>
</div>
<div id="mainContent">
  <div id="chart-container-1"></div>
  <% if params[:size] == 'sm' -%>
    <ol id="contractor_names">
      <li class="contractors name"></li>
    </ol>
  <% end -%>
</div>

<script type="text/javascript" charset="utf-8">

  var description = "Data provided by <a href=\"http://www.usaspending.gov\">USASpending.gov</a>.";

  loadWidget("legislator", ["basic", "contracts"], {bioguide_id: bioguide_id}, function(data) {

    var legislator = data.legislator;
      
    var legislator_district = "";
    if (legislator.district == '0')
      legislator_district = "AL";
    else
      legislator_district = legislator.district;
    
    var legislator_state = legislator.state + "-" + legislator_district;
    
    var pic_filename;
    if (legislator.title == 'Sen')
      pic_filename = "/images/states/" + legislator.state + ".png";
    else
      pic_filename = "/images/districts/" + legislator.state + legislator.district + "-small.gif";

    var widget_data = {
      full_name: legislator.first_name + " " + legislator.last_name,
      pic: pic_filename,
      state_downcase: legislator.state.toLowerCase(),
      state: legislator_state,
      party: "(" + legislator.party + ")"
      // fiscal_year: legislator.contracts.fiscal_year
    };

    $('div#header').autoRender(widget_data);
    updateSource(legislator.contracts.last_updated, description);
    
    var top_contractors = legislator.contracts.top_contractors;
    var top_names = [];
    var top_amounts = [];
    var name_objects = [];
    for (var i = 0; i < 5; i++) {
      top_names[i] = top_contractors[i].name;
      name_objects[i] = {name: top_contractors[i].name.substring(0,15)};
      top_amounts[i] = parseFloat(top_contractors[i].amount);
    }
    
    var names = top_names;      
    if (size == 'sm') {
      names = ['1', '2', '3', '4', '5'];
      $('ol#contractor_names').autoRender({"contractors": name_objects});
    }

    var dimensions = {};
    if (size == 'sm') {
      dimensions.width = 130;
      dimensions.height = 100;
      dimensions.margin = [0, 20, 20, 20];
    } else if (size == 'med') {
      dimensions.width = 272;
      dimensions.height = 150;
      dimensions.margin = [0, 30, 20, 80];
    } else {
      dimensions.width = 360;
      dimensions.height = 180;
      dimensions.margin = [0, 30, 20, 80];
    }

    
    var chart1 = new Highcharts.Chart({
      chart: {
        renderTo: 'chart-container-1',
        defaultSeriesType: 'bar',
        width: dimensions.width,
        height: dimensions.height,
        margin: dimensions.margin
      },
      title: {
        text: "",
        style: {
          display: 'none',
          position: 'absolute',
          left: '0',
          top: '0'
        }
      },
      xAxis: {
        categories: names,
        labels: {
          formatter: function() {
            return this.value.substring(0,10);
          }
        }
      },
      yAxis: {
        title: null,
        labels: {
          formatter: function() {
            return '$' + this.value/1000000 + 'M';
          }
        }
      },
      credits: { enabled: false },
      legend: { enabled: false },
      tooltip: {
            formatter: function() {
                return this.x + ' for $'+ Highcharts.numberFormat(this.y, 2, '.');
            }
          },
      series: [{
        name: '',
        data: top_amounts
        }]
      });
  });
</script>